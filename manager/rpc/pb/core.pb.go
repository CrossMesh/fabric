// Code generated by protoc-gen-go. DO NOT EDIT.
// source: manager/rpc/pb/core.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SeedPeerRequest struct {
	Endpoint             []*SeedPeerRequest_EndpointIdentity `protobuf:"bytes,1,rep,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *SeedPeerRequest) Reset()         { *m = SeedPeerRequest{} }
func (m *SeedPeerRequest) String() string { return proto.CompactTextString(m) }
func (*SeedPeerRequest) ProtoMessage()    {}
func (*SeedPeerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5965d1d7a4dd0171, []int{0}
}

func (m *SeedPeerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeedPeerRequest.Unmarshal(m, b)
}
func (m *SeedPeerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeedPeerRequest.Marshal(b, m, deterministic)
}
func (m *SeedPeerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeedPeerRequest.Merge(m, src)
}
func (m *SeedPeerRequest) XXX_Size() int {
	return xxx_messageInfo_SeedPeerRequest.Size(m)
}
func (m *SeedPeerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SeedPeerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SeedPeerRequest proto.InternalMessageInfo

func (m *SeedPeerRequest) GetEndpoint() []*SeedPeerRequest_EndpointIdentity {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

type SeedPeerRequest_EndpointIdentity struct {
	EndpointType         string   `protobuf:"bytes,1,opt,name=endpoint_type,json=endpointType,proto3" json:"endpoint_type,omitempty"`
	Endpoint             string   `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SeedPeerRequest_EndpointIdentity) Reset()         { *m = SeedPeerRequest_EndpointIdentity{} }
func (m *SeedPeerRequest_EndpointIdentity) String() string { return proto.CompactTextString(m) }
func (*SeedPeerRequest_EndpointIdentity) ProtoMessage()    {}
func (*SeedPeerRequest_EndpointIdentity) Descriptor() ([]byte, []int) {
	return fileDescriptor_5965d1d7a4dd0171, []int{0, 0}
}

func (m *SeedPeerRequest_EndpointIdentity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SeedPeerRequest_EndpointIdentity.Unmarshal(m, b)
}
func (m *SeedPeerRequest_EndpointIdentity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SeedPeerRequest_EndpointIdentity.Marshal(b, m, deterministic)
}
func (m *SeedPeerRequest_EndpointIdentity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SeedPeerRequest_EndpointIdentity.Merge(m, src)
}
func (m *SeedPeerRequest_EndpointIdentity) XXX_Size() int {
	return xxx_messageInfo_SeedPeerRequest_EndpointIdentity.Size(m)
}
func (m *SeedPeerRequest_EndpointIdentity) XXX_DiscardUnknown() {
	xxx_messageInfo_SeedPeerRequest_EndpointIdentity.DiscardUnknown(m)
}

var xxx_messageInfo_SeedPeerRequest_EndpointIdentity proto.InternalMessageInfo

func (m *SeedPeerRequest_EndpointIdentity) GetEndpointType() string {
	if m != nil {
		return m.EndpointType
	}
	return ""
}

func (m *SeedPeerRequest_EndpointIdentity) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type Result struct {
	Succeed              bool     `protobuf:"varint,1,opt,name=succeed,proto3" json:"succeed,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_5965d1d7a4dd0171, []int{1}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetSucceed() bool {
	if m != nil {
		return m.Succeed
	}
	return false
}

func (m *Result) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*SeedPeerRequest)(nil), "pb.SeedPeerRequest")
	proto.RegisterType((*SeedPeerRequest_EndpointIdentity)(nil), "pb.SeedPeerRequest.EndpointIdentity")
	proto.RegisterType((*Result)(nil), "pb.Result")
}

func init() { proto.RegisterFile("manager/rpc/pb/core.proto", fileDescriptor_5965d1d7a4dd0171) }

var fileDescriptor_5965d1d7a4dd0171 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x4d, 0x85, 0x1a, 0x47, 0xc5, 0xb2, 0x5e, 0x62, 0x4e, 0x25, 0x7a, 0xe8, 0xc5, 0x04,
	0xea, 0xd5, 0x83, 0x1e, 0x3c, 0x78, 0x50, 0x64, 0xeb, 0x5d, 0x92, 0xec, 0xa3, 0x14, 0xcd, 0xee,
	0xba, 0x3b, 0x41, 0xf2, 0x8f, 0xfc, 0x99, 0x92, 0xd8, 0x2d, 0x12, 0x7a, 0x7c, 0xf3, 0xcd, 0xcc,
	0xe3, 0x3d, 0xba, 0x6c, 0x4a, 0x5d, 0xae, 0xe1, 0x0a, 0x67, 0xeb, 0xc2, 0x56, 0x45, 0x6d, 0x1c,
	0x72, 0xeb, 0x0c, 0x1b, 0x31, 0xb1, 0x55, 0xf6, 0x13, 0xd1, 0xf9, 0x0a, 0x50, 0xaf, 0x80, 0x93,
	0xf8, 0x6a, 0xe1, 0x59, 0xdc, 0x53, 0x0c, 0xad, 0xac, 0xd9, 0x68, 0x4e, 0xa2, 0xf9, 0xe1, 0xe2,
	0x64, 0x79, 0x9d, 0xdb, 0x2a, 0x1f, 0xad, 0xe5, 0x8f, 0xdb, 0x9d, 0x27, 0x05, 0xcd, 0x1b, 0xee,
	0xe4, 0xee, 0x2a, 0x5d, 0xd1, 0x6c, 0x4c, 0xc5, 0x15, 0x9d, 0x05, 0xfe, 0xce, 0x9d, 0x45, 0x12,
	0xcd, 0xa3, 0xc5, 0xb1, 0x3c, 0x0d, 0xc3, 0xb7, 0xce, 0x42, 0xa4, 0xff, 0xac, 0x27, 0x03, 0xdf,
	0xe9, 0xec, 0x8e, 0xa6, 0x12, 0xbe, 0xfd, 0x64, 0x91, 0xd0, 0x91, 0x6f, 0xeb, 0x1a, 0x50, 0xc3,
	0x93, 0x58, 0x06, 0xd9, 0x93, 0x06, 0xde, 0x97, 0x6b, 0x6c, 0xcf, 0x83, 0x5c, 0x3e, 0xd0, 0xec,
	0x05, 0xfc, 0x6d, 0xdc, 0xc7, 0x73, 0x5f, 0x48, 0x03, 0xcd, 0xe2, 0x86, 0xe2, 0x10, 0x4a, 0x5c,
	0xec, 0x89, 0x98, 0x52, 0x3f, 0xfc, 0x33, 0xcd, 0x0e, 0xaa, 0xe9, 0x50, 0xdb, 0xed, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xa9, 0xc6, 0x2a, 0x89, 0x53, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NetworkManagmentClient is the client API for NetworkManagment service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkManagmentClient interface {
	SeedPeer(ctx context.Context, in *SeedPeerRequest, opts ...grpc.CallOption) (*Result, error)
}

type networkManagmentClient struct {
	cc grpc.ClientConnInterface
}

func NewNetworkManagmentClient(cc grpc.ClientConnInterface) NetworkManagmentClient {
	return &networkManagmentClient{cc}
}

func (c *networkManagmentClient) SeedPeer(ctx context.Context, in *SeedPeerRequest, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pb.NetworkManagment/SeedPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NetworkManagmentServer is the server API for NetworkManagment service.
type NetworkManagmentServer interface {
	SeedPeer(context.Context, *SeedPeerRequest) (*Result, error)
}

// UnimplementedNetworkManagmentServer can be embedded to have forward compatible implementations.
type UnimplementedNetworkManagmentServer struct {
}

func (*UnimplementedNetworkManagmentServer) SeedPeer(ctx context.Context, req *SeedPeerRequest) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SeedPeer not implemented")
}

func RegisterNetworkManagmentServer(s *grpc.Server, srv NetworkManagmentServer) {
	s.RegisterService(&_NetworkManagment_serviceDesc, srv)
}

func _NetworkManagment_SeedPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SeedPeerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkManagmentServer).SeedPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.NetworkManagment/SeedPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkManagmentServer).SeedPeer(ctx, req.(*SeedPeerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NetworkManagment_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.NetworkManagment",
	HandlerType: (*NetworkManagmentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SeedPeer",
			Handler:    _NetworkManagment_SeedPeer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "manager/rpc/pb/core.proto",
}
