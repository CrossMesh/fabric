// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/pb/core.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PeerBackend_BackendType int32

const (
	PeerBackend_TCP PeerBackend_BackendType = 0
)

var PeerBackend_BackendType_name = map[int32]string{
	0: "TCP",
}

var PeerBackend_BackendType_value = map[string]int32{
	"TCP": 0,
}

func (x PeerBackend_BackendType) String() string {
	return proto.EnumName(PeerBackend_BackendType_name, int32(x))
}

func (PeerBackend_BackendType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c2fbac20d44b7b4, []int{0, 0}
}

type Peer_State int32

const (
	Peer_NEW       Peer_State = 0
	Peer_ALIVE     Peer_State = 1
	Peer_SUSPECTED Peer_State = 2
	Peer_DEAD      Peer_State = 3
)

var Peer_State_name = map[int32]string{
	0: "NEW",
	1: "ALIVE",
	2: "SUSPECTED",
	3: "DEAD",
}

var Peer_State_value = map[string]int32{
	"NEW":       0,
	"ALIVE":     1,
	"SUSPECTED": 2,
	"DEAD":      3,
}

func (x Peer_State) String() string {
	return proto.EnumName(Peer_State_name, int32(x))
}

func (Peer_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c2fbac20d44b7b4, []int{2, 0}
}

type RPC_Type int32

const (
	RPC_Request RPC_Type = 0
	RPC_Reply   RPC_Type = 1
)

var RPC_Type_name = map[int32]string{
	0: "Request",
	1: "Reply",
}

var RPC_Type_value = map[string]int32{
	"Request": 0,
	"Reply":   1,
}

func (x RPC_Type) String() string {
	return proto.EnumName(RPC_Type_name, int32(x))
}

func (RPC_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0c2fbac20d44b7b4, []int{4, 0}
}

type PeerBackend struct {
	Backend              PeerBackend_BackendType `protobuf:"varint,1,opt,name=backend,proto3,enum=pb.PeerBackend_BackendType" json:"backend,omitempty"`
	Ip                   uint32                  `protobuf:"varint,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Details              []*any.Any              `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PeerBackend) Reset()         { *m = PeerBackend{} }
func (m *PeerBackend) String() string { return proto.CompactTextString(m) }
func (*PeerBackend) ProtoMessage()    {}
func (*PeerBackend) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2fbac20d44b7b4, []int{0}
}

func (m *PeerBackend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerBackend.Unmarshal(m, b)
}
func (m *PeerBackend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerBackend.Marshal(b, m, deterministic)
}
func (m *PeerBackend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerBackend.Merge(m, src)
}
func (m *PeerBackend) XXX_Size() int {
	return xxx_messageInfo_PeerBackend.Size(m)
}
func (m *PeerBackend) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerBackend.DiscardUnknown(m)
}

var xxx_messageInfo_PeerBackend proto.InternalMessageInfo

func (m *PeerBackend) GetBackend() PeerBackend_BackendType {
	if m != nil {
		return m.Backend
	}
	return PeerBackend_TCP
}

func (m *PeerBackend) GetIp() uint32 {
	if m != nil {
		return m.Ip
	}
	return 0
}

func (m *PeerBackend) GetDetails() []*any.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

type TCPBackendDetail struct {
	Port                 uint32   `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TCPBackendDetail) Reset()         { *m = TCPBackendDetail{} }
func (m *TCPBackendDetail) String() string { return proto.CompactTextString(m) }
func (*TCPBackendDetail) ProtoMessage()    {}
func (*TCPBackendDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2fbac20d44b7b4, []int{1}
}

func (m *TCPBackendDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TCPBackendDetail.Unmarshal(m, b)
}
func (m *TCPBackendDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TCPBackendDetail.Marshal(b, m, deterministic)
}
func (m *TCPBackendDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TCPBackendDetail.Merge(m, src)
}
func (m *TCPBackendDetail) XXX_Size() int {
	return xxx_messageInfo_TCPBackendDetail.Size(m)
}
func (m *TCPBackendDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_TCPBackendDetail.DiscardUnknown(m)
}

var xxx_messageInfo_TCPBackendDetail proto.InternalMessageInfo

func (m *TCPBackendDetail) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Peer struct {
	PeerType             uint32         `protobuf:"varint,1,opt,name=peer_type,json=peerType,proto3" json:"peer_type,omitempty"`
	VirtualIp            uint32         `protobuf:"varint,2,opt,name=virtual_ip,json=virtualIp,proto3" json:"virtual_ip,omitempty"`
	VirtualMask          uint32         `protobuf:"varint,3,opt,name=virtual_mask,json=virtualMask,proto3" json:"virtual_mask,omitempty"`
	Version              uint64         `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	State                Peer_State     `protobuf:"varint,5,opt,name=state,proto3,enum=pb.Peer_State" json:"state,omitempty"`
	StateVersion         uint32         `protobuf:"varint,6,opt,name=state_version,json=stateVersion,proto3" json:"state_version,omitempty"`
	Tag                  []string       `protobuf:"bytes,7,rep,name=tag,proto3" json:"tag,omitempty"`
	Backend              []*PeerBackend `protobuf:"bytes,8,rep,name=backend,proto3" json:"backend,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Peer) Reset()         { *m = Peer{} }
func (m *Peer) String() string { return proto.CompactTextString(m) }
func (*Peer) ProtoMessage()    {}
func (*Peer) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2fbac20d44b7b4, []int{2}
}

func (m *Peer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Peer.Unmarshal(m, b)
}
func (m *Peer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Peer.Marshal(b, m, deterministic)
}
func (m *Peer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Peer.Merge(m, src)
}
func (m *Peer) XXX_Size() int {
	return xxx_messageInfo_Peer.Size(m)
}
func (m *Peer) XXX_DiscardUnknown() {
	xxx_messageInfo_Peer.DiscardUnknown(m)
}

var xxx_messageInfo_Peer proto.InternalMessageInfo

func (m *Peer) GetPeerType() uint32 {
	if m != nil {
		return m.PeerType
	}
	return 0
}

func (m *Peer) GetVirtualIp() uint32 {
	if m != nil {
		return m.VirtualIp
	}
	return 0
}

func (m *Peer) GetVirtualMask() uint32 {
	if m != nil {
		return m.VirtualMask
	}
	return 0
}

func (m *Peer) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Peer) GetState() Peer_State {
	if m != nil {
		return m.State
	}
	return Peer_NEW
}

func (m *Peer) GetStateVersion() uint32 {
	if m != nil {
		return m.StateVersion
	}
	return 0
}

func (m *Peer) GetTag() []string {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *Peer) GetBackend() []*PeerBackend {
	if m != nil {
		return m.Backend
	}
	return nil
}

type PeerExchange struct {
	Peer                 []*Peer  `protobuf:"bytes,1,rep,name=peer,proto3" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerExchange) Reset()         { *m = PeerExchange{} }
func (m *PeerExchange) String() string { return proto.CompactTextString(m) }
func (*PeerExchange) ProtoMessage()    {}
func (*PeerExchange) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2fbac20d44b7b4, []int{3}
}

func (m *PeerExchange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerExchange.Unmarshal(m, b)
}
func (m *PeerExchange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerExchange.Marshal(b, m, deterministic)
}
func (m *PeerExchange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerExchange.Merge(m, src)
}
func (m *PeerExchange) XXX_Size() int {
	return xxx_messageInfo_PeerExchange.Size(m)
}
func (m *PeerExchange) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerExchange.DiscardUnknown(m)
}

var xxx_messageInfo_PeerExchange proto.InternalMessageInfo

func (m *PeerExchange) GetPeer() []*Peer {
	if m != nil {
		return m.Peer
	}
	return nil
}

type RPC struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Function             string   `protobuf:"bytes,2,opt,name=function,proto3" json:"function,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RPC) Reset()         { *m = RPC{} }
func (m *RPC) String() string { return proto.CompactTextString(m) }
func (*RPC) ProtoMessage()    {}
func (*RPC) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c2fbac20d44b7b4, []int{4}
}

func (m *RPC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RPC.Unmarshal(m, b)
}
func (m *RPC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RPC.Marshal(b, m, deterministic)
}
func (m *RPC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RPC.Merge(m, src)
}
func (m *RPC) XXX_Size() int {
	return xxx_messageInfo_RPC.Size(m)
}
func (m *RPC) XXX_DiscardUnknown() {
	xxx_messageInfo_RPC.DiscardUnknown(m)
}

var xxx_messageInfo_RPC proto.InternalMessageInfo

func (m *RPC) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RPC) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *RPC) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("pb.PeerBackend_BackendType", PeerBackend_BackendType_name, PeerBackend_BackendType_value)
	proto.RegisterEnum("pb.Peer_State", Peer_State_name, Peer_State_value)
	proto.RegisterEnum("pb.RPC_Type", RPC_Type_name, RPC_Type_value)
	proto.RegisterType((*PeerBackend)(nil), "pb.PeerBackend")
	proto.RegisterType((*TCPBackendDetail)(nil), "pb.TCPBackendDetail")
	proto.RegisterType((*Peer)(nil), "pb.Peer")
	proto.RegisterType((*PeerExchange)(nil), "pb.PeerExchange")
	proto.RegisterType((*RPC)(nil), "pb.RPC")
}

func init() { proto.RegisterFile("proto/pb/core.proto", fileDescriptor_0c2fbac20d44b7b4) }

var fileDescriptor_0c2fbac20d44b7b4 = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0xed, 0x8e, 0x93, 0x40,
	0x14, 0x5d, 0x3e, 0xba, 0xc0, 0xa5, 0xad, 0x64, 0x34, 0x06, 0x77, 0xd5, 0x20, 0x1a, 0x83, 0x89,
	0xa1, 0xc9, 0xaa, 0x0f, 0x50, 0x5b, 0x7e, 0x6c, 0xa2, 0x86, 0x4c, 0xeb, 0xfa, 0xb3, 0x19, 0xca,
	0x6c, 0x25, 0xad, 0x30, 0xc2, 0x74, 0x23, 0xef, 0xe2, 0xab, 0xf8, 0x6e, 0x66, 0x2e, 0x50, 0x37,
	0xfe, 0xe2, 0xde, 0x73, 0x4f, 0xee, 0x3d, 0x9c, 0x33, 0xf0, 0x50, 0xd4, 0x95, 0xac, 0x66, 0x22,
	0x9b, 0x6d, 0xab, 0x9a, 0xc7, 0xd8, 0x11, 0x5d, 0x64, 0x17, 0x4f, 0x76, 0x55, 0xb5, 0x3b, 0xf0,
	0x19, 0x22, 0xd9, 0xf1, 0x76, 0xc6, 0xca, 0xb6, 0x1b, 0x87, 0xbf, 0x35, 0x70, 0x53, 0xce, 0xeb,
	0x8f, 0x6c, 0xbb, 0xe7, 0x65, 0x4e, 0x3e, 0x80, 0x95, 0x75, 0xa5, 0xaf, 0x05, 0x5a, 0x34, 0xbd,
	0xba, 0x8c, 0x45, 0x16, 0xdf, 0x63, 0xc4, 0xfd, 0x77, 0xdd, 0x0a, 0x4e, 0x07, 0x2e, 0x99, 0x82,
	0x5e, 0x08, 0x5f, 0x0f, 0xb4, 0x68, 0x42, 0xf5, 0x42, 0x90, 0x18, 0xac, 0x9c, 0x4b, 0x56, 0x1c,
	0x1a, 0xdf, 0x08, 0x8c, 0xc8, 0xbd, 0x7a, 0x14, 0x77, 0x1a, 0xe2, 0x41, 0x43, 0x3c, 0x2f, 0x5b,
	0x3a, 0x90, 0xc2, 0xc7, 0xe0, 0xde, 0xdb, 0x4b, 0x2c, 0x30, 0xd6, 0x8b, 0xd4, 0x3b, 0x0b, 0x5f,
	0x83, 0xb7, 0x5e, 0xa4, 0xfd, 0x68, 0x89, 0x64, 0x42, 0xc0, 0x14, 0x55, 0x2d, 0x51, 0xdf, 0x84,
	0x62, 0x1d, 0xfe, 0xd1, 0xc1, 0x54, 0x22, 0xc9, 0x25, 0x38, 0x82, 0xf3, 0x7a, 0x23, 0x5b, 0xc1,
	0x7b, 0x86, 0xad, 0x00, 0x5c, 0xfb, 0x0c, 0xe0, 0xae, 0xa8, 0xe5, 0x91, 0x1d, 0x36, 0x27, 0xb5,
	0x4e, 0x8f, 0x5c, 0x0b, 0xf2, 0x02, 0xc6, 0xc3, 0xf8, 0x07, 0x6b, 0xf6, 0xbe, 0x81, 0x04, 0xb7,
	0xc7, 0x3e, 0xb3, 0x66, 0x4f, 0x7c, 0xb0, 0xee, 0x78, 0xdd, 0x14, 0x55, 0xe9, 0x9b, 0x81, 0x16,
	0x99, 0x74, 0x68, 0xc9, 0x2b, 0x18, 0x35, 0x92, 0x49, 0xee, 0x8f, 0xd0, 0xb6, 0xe9, 0x60, 0x5b,
	0xbc, 0x52, 0x28, 0xed, 0x86, 0xe4, 0x25, 0x4c, 0xb0, 0xd8, 0x0c, 0x5b, 0xce, 0xf1, 0xc6, 0x18,
	0xc1, 0x9b, 0x7e, 0x95, 0x07, 0x86, 0x64, 0x3b, 0xdf, 0x0a, 0x8c, 0xc8, 0xa1, 0xaa, 0x24, 0x6f,
	0xfe, 0xa5, 0x62, 0xa3, 0x9d, 0x0f, 0xfe, 0x4b, 0xe5, 0x94, 0x44, 0xf8, 0x1e, 0x46, 0x78, 0x51,
	0x79, 0xf8, 0x25, 0xf9, 0xe6, 0x9d, 0x11, 0x07, 0x46, 0xf3, 0x4f, 0xd7, 0x37, 0x89, 0xa7, 0x91,
	0x09, 0x38, 0xab, 0xaf, 0xab, 0x34, 0x59, 0xac, 0x93, 0xa5, 0xa7, 0x13, 0x1b, 0xcc, 0x65, 0x32,
	0x5f, 0x7a, 0x46, 0xf8, 0x16, 0xc6, 0x6a, 0x5b, 0xf2, 0x6b, 0xfb, 0x9d, 0x95, 0x3b, 0x4e, 0x9e,
	0x82, 0xa9, 0x5c, 0xf3, 0x35, 0xbc, 0x66, 0x0f, 0xd7, 0x28, 0xa2, 0x21, 0x07, 0x83, 0xa6, 0x0b,
	0x0c, 0x3d, 0xef, 0x4d, 0xd6, 0x8b, 0x9c, 0x5c, 0x80, 0x7d, 0x7b, 0x2c, 0xb7, 0x52, 0xfd, 0x97,
	0x32, 0xd7, 0xa1, 0xa7, 0x5e, 0x85, 0x96, 0x33, 0xc9, 0xd0, 0xd3, 0x31, 0xc5, 0x3a, 0x7c, 0x0e,
	0x26, 0xc6, 0xe2, 0x82, 0x45, 0xf9, 0xcf, 0x23, 0x6f, 0x64, 0xa7, 0x96, 0x72, 0x71, 0x68, 0x3d,
	0x2d, 0x3b, 0xc7, 0xb7, 0xf2, 0xee, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x25, 0x48, 0x66,
	0xd8, 0x02, 0x00, 0x00,
}
