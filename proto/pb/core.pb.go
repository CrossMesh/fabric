// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.2
// source: proto/pb/core.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PeerBackend_BackendType int32

const (
	PeerBackend_UNKNOWN PeerBackend_BackendType = 0
	PeerBackend_TCP     PeerBackend_BackendType = 1
)

// Enum value maps for PeerBackend_BackendType.
var (
	PeerBackend_BackendType_name = map[int32]string{
		0: "UNKNOWN",
		1: "TCP",
	}
	PeerBackend_BackendType_value = map[string]int32{
		"UNKNOWN": 0,
		"TCP":     1,
	}
)

func (x PeerBackend_BackendType) Enum() *PeerBackend_BackendType {
	p := new(PeerBackend_BackendType)
	*p = x
	return p
}

func (x PeerBackend_BackendType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PeerBackend_BackendType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pb_core_proto_enumTypes[0].Descriptor()
}

func (PeerBackend_BackendType) Type() protoreflect.EnumType {
	return &file_proto_pb_core_proto_enumTypes[0]
}

func (x PeerBackend_BackendType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PeerBackend_BackendType.Descriptor instead.
func (PeerBackend_BackendType) EnumDescriptor() ([]byte, []int) {
	return file_proto_pb_core_proto_rawDescGZIP(), []int{0, 0}
}

type Peer_State int32

const (
	Peer_ALIVE     Peer_State = 0
	Peer_SUSPECTED Peer_State = 1
	Peer_DEAD      Peer_State = 2
	Peer_NEW       Peer_State = 3
)

// Enum value maps for Peer_State.
var (
	Peer_State_name = map[int32]string{
		0: "ALIVE",
		1: "SUSPECTED",
		2: "DEAD",
		3: "NEW",
	}
	Peer_State_value = map[string]int32{
		"ALIVE":     0,
		"SUSPECTED": 1,
		"DEAD":      2,
		"NEW":       3,
	}
)

func (x Peer_State) Enum() *Peer_State {
	p := new(Peer_State)
	*p = x
	return p
}

func (x Peer_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Peer_State) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pb_core_proto_enumTypes[1].Descriptor()
}

func (Peer_State) Type() protoreflect.EnumType {
	return &file_proto_pb_core_proto_enumTypes[1]
}

func (x Peer_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Peer_State.Descriptor instead.
func (Peer_State) EnumDescriptor() ([]byte, []int) {
	return file_proto_pb_core_proto_rawDescGZIP(), []int{2, 0}
}

type RPC_Type int32

const (
	RPC_Request RPC_Type = 0
	RPC_Reply   RPC_Type = 1
	RPC_Error   RPC_Type = 2
)

// Enum value maps for RPC_Type.
var (
	RPC_Type_name = map[int32]string{
		0: "Request",
		1: "Reply",
		2: "Error",
	}
	RPC_Type_value = map[string]int32{
		"Request": 0,
		"Reply":   1,
		"Error":   2,
	}
)

func (x RPC_Type) Enum() *RPC_Type {
	p := new(RPC_Type)
	*p = x
	return p
}

func (x RPC_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RPC_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_pb_core_proto_enumTypes[2].Descriptor()
}

func (RPC_Type) Type() protoreflect.EnumType {
	return &file_proto_pb_core_proto_enumTypes[2]
}

func (x RPC_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RPC_Type.Descriptor instead.
func (RPC_Type) EnumDescriptor() ([]byte, []int) {
	return file_proto_pb_core_proto_rawDescGZIP(), []int{4, 0}
}

type PeerBackend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     PeerBackend_BackendType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.PeerBackend_BackendType" json:"type,omitempty"`
	Endpoint string                  `protobuf:"bytes,2,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Priority uint32                  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *PeerBackend) Reset() {
	*x = PeerBackend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_core_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerBackend) ProtoMessage() {}

func (x *PeerBackend) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_core_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerBackend.ProtoReflect.Descriptor instead.
func (*PeerBackend) Descriptor() ([]byte, []int) {
	return file_proto_pb_core_proto_rawDescGZIP(), []int{0}
}

func (x *PeerBackend) GetType() PeerBackend_BackendType {
	if x != nil {
		return x.Type
	}
	return PeerBackend_UNKNOWN
}

func (x *PeerBackend) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *PeerBackend) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type OverlayPeer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualIp   uint32 `protobuf:"varint,1,opt,name=virtual_ip,json=virtualIp,proto3" json:"virtual_ip,omitempty"`
	VirtualMask uint32 `protobuf:"varint,2,opt,name=virtual_mask,json=virtualMask,proto3" json:"virtual_mask,omitempty"`
	IsRouter    bool   `protobuf:"varint,3,opt,name=is_router,json=isRouter,proto3" json:"is_router,omitempty"`
}

func (x *OverlayPeer) Reset() {
	*x = OverlayPeer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_core_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverlayPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverlayPeer) ProtoMessage() {}

func (x *OverlayPeer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_core_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverlayPeer.ProtoReflect.Descriptor instead.
func (*OverlayPeer) Descriptor() ([]byte, []int) {
	return file_proto_pb_core_proto_rawDescGZIP(), []int{1}
}

func (x *OverlayPeer) GetVirtualIp() uint32 {
	if x != nil {
		return x.VirtualIp
	}
	return 0
}

func (x *OverlayPeer) GetVirtualMask() uint32 {
	if x != nil {
		return x.VirtualMask
	}
	return 0
}

func (x *OverlayPeer) GetIsRouter() bool {
	if x != nil {
		return x.IsRouter
	}
	return false
}

type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerType     uint32         `protobuf:"varint,1,opt,name=peer_type,json=peerType,proto3" json:"peer_type,omitempty"`
	Version      uint64         `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	Details      *any.Any       `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
	State        Peer_State     `protobuf:"varint,8,opt,name=state,proto3,enum=pb.Peer_State" json:"state,omitempty"`
	StateVersion uint32         `protobuf:"varint,9,opt,name=state_version,json=stateVersion,proto3" json:"state_version,omitempty"`
	Region       string         `protobuf:"bytes,10,opt,name=region,proto3" json:"region,omitempty"`
	Backend      []*PeerBackend `protobuf:"bytes,11,rep,name=backend,proto3" json:"backend,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_core_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_core_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_proto_pb_core_proto_rawDescGZIP(), []int{2}
}

func (x *Peer) GetPeerType() uint32 {
	if x != nil {
		return x.PeerType
	}
	return 0
}

func (x *Peer) GetVersion() uint64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Peer) GetDetails() *any.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Peer) GetState() Peer_State {
	if x != nil {
		return x.State
	}
	return Peer_ALIVE
}

func (x *Peer) GetStateVersion() uint32 {
	if x != nil {
		return x.StateVersion
	}
	return 0
}

func (x *Peer) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Peer) GetBackend() []*PeerBackend {
	if x != nil {
		return x.Backend
	}
	return nil
}

type PeerExchange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer []*Peer `protobuf:"bytes,1,rep,name=peer,proto3" json:"peer,omitempty"`
}

func (x *PeerExchange) Reset() {
	*x = PeerExchange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_core_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerExchange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerExchange) ProtoMessage() {}

func (x *PeerExchange) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_core_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerExchange.ProtoReflect.Descriptor instead.
func (*PeerExchange) Descriptor() ([]byte, []int) {
	return file_proto_pb_core_proto_rawDescGZIP(), []int{3}
}

func (x *PeerExchange) GetPeer() []*Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type RPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type     RPC_Type `protobuf:"varint,2,opt,name=type,proto3,enum=pb.RPC_Type" json:"type,omitempty"`
	Error    string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Function string   `protobuf:"bytes,4,opt,name=function,proto3" json:"function,omitempty"`
	Data     []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RPC) Reset() {
	*x = RPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_pb_core_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPC) ProtoMessage() {}

func (x *RPC) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pb_core_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPC.ProtoReflect.Descriptor instead.
func (*RPC) Descriptor() ([]byte, []int) {
	return file_proto_pb_core_proto_rawDescGZIP(), []int{4}
}

func (x *RPC) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RPC) GetType() RPC_Type {
	if x != nil {
		return x.Type
	}
	return RPC_Request
}

func (x *RPC) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RPC) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *RPC) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_proto_pb_core_proto protoreflect.FileDescriptor

var file_proto_pb_core_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x0b, 0x50, 0x65, 0x65, 0x72, 0x42, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x23, 0x0a,
	0x0b, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x50,
	0x10, 0x01, 0x22, 0x6c, 0x0a, 0x0b, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x50, 0x65, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x69, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x70,
	0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d,
	0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x22, 0xb1, 0x02, 0x0a, 0x04, 0x50, 0x65, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x65,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x24, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x22, 0x34,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4c, 0x49, 0x56, 0x45,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x53, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x41, 0x44, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x4e,
	0x45, 0x57, 0x10, 0x03, 0x22, 0x2c, 0x0a, 0x0c, 0x50, 0x65, 0x65, 0x72, 0x45, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x03, 0x52, 0x50, 0x43, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x50,
	0x43, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x29, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x02, 0x42, 0x26, 0x5a,
	0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x72, 0x6f, 0x73,
	0x73, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_pb_core_proto_rawDescOnce sync.Once
	file_proto_pb_core_proto_rawDescData = file_proto_pb_core_proto_rawDesc
)

func file_proto_pb_core_proto_rawDescGZIP() []byte {
	file_proto_pb_core_proto_rawDescOnce.Do(func() {
		file_proto_pb_core_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_pb_core_proto_rawDescData)
	})
	return file_proto_pb_core_proto_rawDescData
}

var file_proto_pb_core_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_pb_core_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_pb_core_proto_goTypes = []interface{}{
	(PeerBackend_BackendType)(0), // 0: pb.PeerBackend.BackendType
	(Peer_State)(0),              // 1: pb.Peer.State
	(RPC_Type)(0),                // 2: pb.RPC.Type
	(*PeerBackend)(nil),          // 3: pb.PeerBackend
	(*OverlayPeer)(nil),          // 4: pb.OverlayPeer
	(*Peer)(nil),                 // 5: pb.Peer
	(*PeerExchange)(nil),         // 6: pb.PeerExchange
	(*RPC)(nil),                  // 7: pb.RPC
	(*any.Any)(nil),              // 8: google.protobuf.Any
}
var file_proto_pb_core_proto_depIdxs = []int32{
	0, // 0: pb.PeerBackend.type:type_name -> pb.PeerBackend.BackendType
	8, // 1: pb.Peer.details:type_name -> google.protobuf.Any
	1, // 2: pb.Peer.state:type_name -> pb.Peer.State
	3, // 3: pb.Peer.backend:type_name -> pb.PeerBackend
	5, // 4: pb.PeerExchange.peer:type_name -> pb.Peer
	2, // 5: pb.RPC.type:type_name -> pb.RPC.Type
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_pb_core_proto_init() }
func file_proto_pb_core_proto_init() {
	if File_proto_pb_core_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_pb_core_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerBackend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_core_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverlayPeer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_core_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_core_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerExchange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_pb_core_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_pb_core_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_pb_core_proto_goTypes,
		DependencyIndexes: file_proto_pb_core_proto_depIdxs,
		EnumInfos:         file_proto_pb_core_proto_enumTypes,
		MessageInfos:      file_proto_pb_core_proto_msgTypes,
	}.Build()
	File_proto_pb_core_proto = out.File
	file_proto_pb_core_proto_rawDesc = nil
	file_proto_pb_core_proto_goTypes = nil
	file_proto_pb_core_proto_depIdxs = nil
}
